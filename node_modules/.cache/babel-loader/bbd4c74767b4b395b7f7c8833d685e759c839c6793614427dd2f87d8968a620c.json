{"ast":null,"code":"import tempData from './tempData';\nif (!(window.data === undefined)) {\n  console.log(\"data has been defined in window object\");\n} else {\n  window.data = {};\n}\nif (!(window.tempData === undefined)) {\n  console.log(\"data has been defined in window object\");\n} else {\n  window.tempData = {};\n}\nif (!(window.lastUpdatedTime === undefined)) {\n  console.log(\"lastUpdatedTime has been defined in window object\");\n} else {\n  window.lastUpdatedTime = {};\n}\nif (!(window.setLastUpdatedTime === undefined)) {\n  console.log(\"setLastUpdatedTime has been defined in window object\");\n} else {\n  window.setLastUpdatedTime = {\n    suggestedNovels: \"\",\n    selectedTranslationNovels: \"\",\n    updatedNovels: \"\",\n    fullNovels: \"\",\n    leftOfShortNovel: \"\",\n    rightOfShortNovels: \"\",\n    reviewNovels: \"\",\n    topGoodNovels: \"\",\n    newUpdateNovels: \"\",\n    trendNovelsInMonth: \"\"\n  };\n}\nconst requestGetSynchronized = (request, url) => {\n  request.open(\"GET\", url, false);\n  request.send();\n  return request.responseText;\n};\n{\n  let request = new XMLHttpRequest();\n  let text = requestGetSynchronized(request, \"data.json\"); //data.json is located in public folder\n  let json = JSON.parse(text);\n  window.tempData = json.data;\n  window.lastUpdatedTime = json.lastUpdatedTime;\n\n  ////     propsSuggestedNovels();\n  //// propsShowNovels(\"selectedTranslationNovels\");\n  // propsUpdatedNovels();\n  // propsShowNovels(\"fullNovels\");\n  // propsShortNovels();\n  // propsSimpleListOfNovels(\"reviewNovels\", \"d-flex p-short-novel\");\n  // propsNovelsList(\"topGoodNovels\");\n  // propsNovelsList(\"newUpdateNovels\");\n  // window.data.trendNovelsInMonth = window.tempData.trendNovelsInMonth;\n}","map":{"version":3,"names":["tempData","window","data","undefined","console","log","lastUpdatedTime","setLastUpdatedTime","suggestedNovels","selectedTranslationNovels","updatedNovels","fullNovels","leftOfShortNovel","rightOfShortNovels","reviewNovels","topGoodNovels","newUpdateNovels","trendNovelsInMonth","requestGetSynchronized","request","url","open","send","responseText","XMLHttpRequest","text","json","JSON","parse"],"sources":["D:/Code/Web/DocTruyenOnlineUpdateReactJS_update/src/updatedData.js"],"sourcesContent":["import tempData from './tempData';\r\n\r\nif (!(window.data === undefined)) {\r\n    console.log(\"data has been defined in window object\");\r\n} else {\r\n    window.data = {};\r\n}\r\n\r\nif (!(window.tempData === undefined)) {\r\n    console.log(\"data has been defined in window object\");\r\n} else {\r\n    window.tempData = {};\r\n}\r\n\r\nif (!(window.lastUpdatedTime === undefined)) {\r\n    console.log(\"lastUpdatedTime has been defined in window object\");\r\n} else {\r\n    window.lastUpdatedTime = {};\r\n}\r\n\r\nif (!(window.setLastUpdatedTime === undefined)) {\r\n    console.log(\"setLastUpdatedTime has been defined in window object\");\r\n} else {\r\n    window.setLastUpdatedTime = {\r\n        suggestedNovels: \"\", selectedTranslationNovels: \"\", updatedNovels: \"\", fullNovels: \"\", leftOfShortNovel: \"\", rightOfShortNovels: \"\", \r\n        reviewNovels: \"\", topGoodNovels: \"\", newUpdateNovels: \"\", trendNovelsInMonth: \"\"\r\n    };\r\n}\r\n\r\nconst requestGetSynchronized = (request, url) => {\r\n    request.open(\"GET\", url, false);\r\n    request.send();\r\n\r\n    return request.responseText;\r\n}\r\n\r\n{\r\n    let request = new XMLHttpRequest();\r\n    let text = requestGetSynchronized(request, \"data.json\");//data.json is located in public folder\r\n    let json = JSON.parse(text);\r\n\r\n    window.tempData = json.data;\r\n    window.lastUpdatedTime = json.lastUpdatedTime;\r\n\r\n\r\n////     propsSuggestedNovels();\r\n//// propsShowNovels(\"selectedTranslationNovels\");\r\n// propsUpdatedNovels();\r\n// propsShowNovels(\"fullNovels\");\r\n// propsShortNovels();\r\n// propsSimpleListOfNovels(\"reviewNovels\", \"d-flex p-short-novel\");\r\n// propsNovelsList(\"topGoodNovels\");\r\n// propsNovelsList(\"newUpdateNovels\");\r\n// window.data.trendNovelsInMonth = window.tempData.trendNovelsInMonth;\r\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjC,IAAI,EAAEC,MAAM,CAACC,IAAI,KAAKC,SAAS,CAAC,EAAE;EAC9BC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;AACzD,CAAC,MAAM;EACHJ,MAAM,CAACC,IAAI,GAAG,CAAC,CAAC;AACpB;AAEA,IAAI,EAAED,MAAM,CAACD,QAAQ,KAAKG,SAAS,CAAC,EAAE;EAClCC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;AACzD,CAAC,MAAM;EACHJ,MAAM,CAACD,QAAQ,GAAG,CAAC,CAAC;AACxB;AAEA,IAAI,EAAEC,MAAM,CAACK,eAAe,KAAKH,SAAS,CAAC,EAAE;EACzCC,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;AACpE,CAAC,MAAM;EACHJ,MAAM,CAACK,eAAe,GAAG,CAAC,CAAC;AAC/B;AAEA,IAAI,EAAEL,MAAM,CAACM,kBAAkB,KAAKJ,SAAS,CAAC,EAAE;EAC5CC,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;AACvE,CAAC,MAAM;EACHJ,MAAM,CAACM,kBAAkB,GAAG;IACxBC,eAAe,EAAE,EAAE;IAAEC,yBAAyB,EAAE,EAAE;IAAEC,aAAa,EAAE,EAAE;IAAEC,UAAU,EAAE,EAAE;IAAEC,gBAAgB,EAAE,EAAE;IAAEC,kBAAkB,EAAE,EAAE;IACnIC,YAAY,EAAE,EAAE;IAAEC,aAAa,EAAE,EAAE;IAAEC,eAAe,EAAE,EAAE;IAAEC,kBAAkB,EAAE;EAClF,CAAC;AACL;AAEA,MAAMC,sBAAsB,GAAGA,CAACC,OAAO,EAAEC,GAAG,KAAK;EAC7CD,OAAO,CAACE,IAAI,CAAC,KAAK,EAAED,GAAG,EAAE,KAAK,CAAC;EAC/BD,OAAO,CAACG,IAAI,EAAE;EAEd,OAAOH,OAAO,CAACI,YAAY;AAC/B,CAAC;AAED;EACI,IAAIJ,OAAO,GAAG,IAAIK,cAAc,EAAE;EAClC,IAAIC,IAAI,GAAGP,sBAAsB,CAACC,OAAO,EAAE,WAAW,CAAC,CAAC;EACxD,IAAIO,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;EAE3BxB,MAAM,CAACD,QAAQ,GAAG0B,IAAI,CAACxB,IAAI;EAC3BD,MAAM,CAACK,eAAe,GAAGoB,IAAI,CAACpB,eAAe;;EAGjD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}